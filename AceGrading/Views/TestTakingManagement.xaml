<UserControl x:Class="AceGrading.TestTakingManagement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AceGrading"
             mc:Ignorable="d" 
             d:DesignHeight="{StaticResource DesignHeight}" d:DesignWidth="1500">
    <UserControl.Resources>
        <Storyboard x:Key="ExpandUpdateTime">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.MinHeight)" Storyboard.TargetName="UpdateDate_StkPnl">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="130"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CollapseUpdateTime">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.MinHeight)" Storyboard.TargetName="UpdateDate_StkPnl">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{StaticResource RectDim}"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>

        <Grid Name="Grid1" Background="{DynamicResource OffWhite}">
            <Grid Margin="10,0,10,10">
                <Grid Name="ClassroomGrid">
                    <Grid Name="TestSetup_Grid" Background="{Binding ElementName=Grid1, Path=Background}" d:IsHidden="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{StaticResource SquareDim}"/>
                            <RowDefinition Height="{StaticResource ExtraLargeSquareDim}"/>
                            <RowDefinition Height="{StaticResource LargeSquareDim}"/>
                            <RowDefinition Height="{StaticResource LargeSquareDim}"/>
                            <RowDefinition Height="{StaticResource ExtraLargeSquareDim}"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Test Taking Setup" VerticalAlignment="Center"/>
                        <Button Content="Start" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource BlueTextBtn}" Click="StartTest_Click" Command="{Binding SelectedClass.SelectedTest.StartTest}"/>

                        <!--Test Information-->
                        <StackPanel Grid.Row="1">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Top">
                                <Grid VerticalAlignment="Top" HorizontalAlignment="Center">
                                    <Ellipse Height="{StaticResource MediumProfilePic}" Width="{StaticResource MediumProfilePic}" Fill="{StaticResource RoyalSeaBlue}"/>
                                    <TextBlock Text="{Binding SelectedClass.Class_Initials, FallbackValue='AA'}" FontSize="20" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                                <Grid Margin="70,20,0,0">
                                    <Ellipse Height="{StaticResource SmallProfilePic}" Width="{StaticResource SmallProfilePic}" Fill="{StaticResource DarkSteelBlue}"/>
                                    <TextBlock Text="{Binding SelectedClass.SelectedTest.Initials, FallbackValue=BB}" FontSize="15" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </Grid>

                            <TextBlock Text="{Binding SelectedClass.Class_Name, FallbackValue='Class Name'}" Margin="0,5,0,0" TextAlignment="Center" Foreground="Black"/>
                            <TextBlock Text="{Binding SelectedClass.SelectedTest.TestName, FallbackValue='Test Name'}" Margin="0,2,0,0" FontStyle="Italic" TextAlignment="Center" Foreground="Black"/>
                        </StackPanel>

                        <!--Rows and Columns-->
                        <StackPanel Grid.Row="2" DataContext="{Binding SelectedClass.ClassLayout}">
                            <TextBlock Text="Classroom Arrangement"/>
                            <DockPanel Margin="{StaticResource SmallIndent}" HorizontalAlignment="Left">
                                <StackPanel>
                                    <DockPanel>
                                        <RepeatButton Content="-" Style="{StaticResource BlueTextRepeatBtn}" FontSize="20" Margin="0,0,10,0" VerticalAlignment="Center" Command="{Binding DecrementRows}"/>
                                        <TextBlock Text="{Binding NumRows, FallbackValue=1}" VerticalAlignment="Center" Foreground="Black"/>
                                        <RepeatButton Content="+" Style="{StaticResource BlueTextRepeatBtn}" FontSize="20" Margin="10,0,0,0" VerticalAlignment="Center" Command="{Binding IncrementRows}"/>
                                    </DockPanel>
                                    <TextBlock Text="Rows" HorizontalAlignment="Center" Foreground="Black"/>
                                </StackPanel>
                                <DockPanel Margin="30,0,0,0">
                                    <StackPanel>
                                        <DockPanel>
                                            <RepeatButton Content="-" Style="{StaticResource BlueTextRepeatBtn}" FontSize="20" Margin="0,0,10,0" VerticalAlignment="Center" Command="{Binding DecrementColumns}"/>
                                            <TextBlock Text="{Binding NumColumns, FallbackValue=1}" VerticalAlignment="Center" Foreground="Black"/>
                                            <RepeatButton Content="+" Style="{StaticResource BlueTextRepeatBtn}" FontSize="20" Margin="10,0,0,0" VerticalAlignment="Center" Command="{Binding IncrementColumns}"/>
                                        </DockPanel>
                                        <TextBlock Text="Columns" HorizontalAlignment="Center" Foreground="Black"/>
                                    </StackPanel>
                                </DockPanel>
                            </DockPanel>
                        </StackPanel>

                        <!--Student Arrangement-->
                        <StackPanel Grid.Row="3">
                            <TextBlock Text="Student Arrangement"/>
                            <Button Content="Alphabetical" Style="{StaticResource BlueTextBtn}" HorizontalAlignment="Left" Margin="{StaticResource SmallIndent}"
                                    ToolTip="Arrange Students Alphabetically" Command="{Binding SelectedClass.ClassLayout.AlphabeticalArrangement}"/>
                            <Button Content="Random" Style="{StaticResource BlueTextBtn}" HorizontalAlignment="Left" Margin="{StaticResource SmallIndent}"
                                    ToolTip="Arrange Students Randomly" Command="{Binding SelectedClass.ClassLayout.RandomArrangement}"/>
                            <TextBlock Text="{Binding SelectedClass.ClassLayout.DisjointStudents.Count, StringFormat={}{0} Student(s) to Place, FallbackValue='10 Students to Place'}" Foreground="Black" Margin="{StaticResource SmallIndent}"/>
                        </StackPanel>

                        <!--Time Picking-->
                        <StackPanel Grid.Row="4">
                            <TextBlock Text="Test End Time"/>
                            <local:TimePicker Foreground="Black" Time="{Binding SelectedClass.SelectedTest.EndTime, Mode=TwoWay}" LimitTo24Hour="True"/>
                        </StackPanel>
                    </Grid>

                    <Grid Name="StartTest_Grid" Background="{Binding ElementName=Grid1, Path=Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{StaticResource SquareDim}"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Monitoring Testers" VerticalAlignment="Center"/>
                        <Button Content="End Test" Style="{DynamicResource BlueTextBtn}" HorizontalAlignment="Right" VerticalAlignment="Center" Click="EndTest_Click"/>

                        <StackPanel Grid.Row="1">
                           
                            <!--Wifi Monitoring-->
                            <StackPanel>
                                <TextBlock Text="Internet Monitoring"/>
                                <DockPanel HorizontalAlignment="Left" Margin="{StaticResource SmallIndent}">
                                    <RadioButton Name="WifiTgleBtn" Content="Enable" Style="{DynamicResource OnSwitch}" 
                                          Height="30" Width="100" HorizontalAlignment="Left" IsChecked="{Binding SelectedClass.SelectedTest.IsWifiDetectionEnabled, Mode=TwoWay, FallbackValue=True}">
                                        <RadioButton.Triggers>
                                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                                <BeginStoryboard>
                                                    <Storyboard x:Name="ExpandWifiMonitoring">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.MaxHeight)" Storyboard.TargetName="WifiManagement_Grid">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="200"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                                <BeginStoryboard>
                                                    <Storyboard x:Name="CollapseWifiMonitoring">
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.MaxHeight)" Storyboard.TargetName="WifiManagement_Grid">
                                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </RadioButton.Triggers>
                                    </RadioButton>
                                    <RadioButton Content="Disable" Style="{DynamicResource OffSwitch}"
                                         Height="30" Width="100" HorizontalAlignment="Left"/>
                                </DockPanel>

                                <StackPanel Name="WifiManagement_Grid">
                                    <!--DockPanel displaying that no students are using the internet-->
                                    <DockPanel Margin="0,10,0,0" Visibility="{Binding SelectedClass.SelectedTest.HasWifiUsers, Converter={StaticResource InverseBoolToCollapse}, FallbackValue=Collapsed}" HorizontalAlignment="Center">
                                        <Image Source="/Icons/wifi_good.png" 
                                               Height="60" HorizontalAlignment="Left"/>
                                        <TextBlock TextAlignment="Center" VerticalAlignment="Center" Foreground="Black">
                                                   No worries!<LineBreak/> No internet usage <LineBreak/> has been detected.</TextBlock>
                                    </DockPanel>

                                    <!--Grid displaying that at least one student is using the internet-->
                                    <Grid Visibility="{Binding SelectedClass.SelectedTest.HasWifiUsers, Converter={StaticResource BoolToCollapse}}" Margin="0,10,0,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="60"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image Source="/Icons/wifi_bad.png" Grid.Column="0"
                                                HorizontalAlignment="Left"/>
                                        <StackPanel Grid.Column="1">
                                            <TextBlock TextAlignment="Center" VerticalAlignment="Center" Foreground="Black" TextWrapping="Wrap" 
                                                   Text="{Binding Path=SelectedClass.SelectedTest.WifiUsers.Count, StringFormat={}The following student(s) were detected using the internet: {0}}"/>
                                            <ListBox MaxHeight="100" Background="{x:Null}" BorderBrush="{x:Null}" ItemsSource="{Binding SelectedClass.SelectedTest.WifiUsers}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate DataType="{x:Type local:Student}">
                                                        <Grid Height="40" Background="Transparent">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="40"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Ellipse Height="{DynamicResource SmallProfilePic}" Width="{DynamicResource SmallProfilePic}" Fill="{DynamicResource Red}"/>
                                                            <TextBlock Text="{Binding Initials}" VerticalAlignment="Center" Foreground="White" HorizontalAlignment="Center"/>
                                                            <TextBlock Text="{Binding StudentName}" Foreground="{DynamicResource DarkGray}"  Grid.Column="1" Margin="10,0,0,0" VerticalAlignment="Center"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </StackPanel>
                                    </Grid>
                                </StackPanel>
                            </StackPanel>
                            
                            <!--Time Remaining and Update End Time-->
                            <StackPanel Margin="0,10,0,0">
                                <TextBlock Text="Time Remaining"/>
                                <StackPanel HorizontalAlignment="Center">
                                    <TextBlock FontSize="20" Foreground="Black" HorizontalAlignment="Center">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="{}{0:00} : {1:00} : {2:00}">
                                                <Binding Path="SelectedClass.SelectedTest.TimeRemaining.Hours" FallbackValue="00"/>
                                                <Binding Path="SelectedClass.SelectedTest.TimeRemaining.Minutes" FallbackValue="00"/>
                                                <Binding Path="SelectedClass.SelectedTest.TimeRemaining.Seconds" FallbackValue="00"/>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                    <Button Name="ChangeTimeTgleBtn" Content="Change Finish Time" Style="{DynamicResource BlueTextBtn}" HorizontalAlignment="Center">
                                        <Button.Triggers>
                                            <EventTrigger RoutedEvent="Button.Click">
                                                <BeginStoryboard Storyboard="{StaticResource ExpandUpdateTime}"/>
                                            </EventTrigger>
                                        </Button.Triggers>
                                    </Button>
                                </StackPanel>

                                <StackPanel Name="UpdateDate_StkPnl" Height="0" DataContext="{Binding SelectedClass.SelectedTest}" HorizontalAlignment="Center">
                                    <local:TimePicker Foreground="Black" HorizontalAlignment="Left" Margin="0,10,0,0" Time="{Binding NewEndTime, Mode=TwoWay}" LimitTo24Hour="True"/>
                                    <DockPanel HorizontalAlignment="Center" Margin="0,10,0,0">
                                        <Button Content="Cancel" Style="{DynamicResource RedTextBtn}" Margin="10,0">
                                            <Button.Triggers>
                                                <EventTrigger RoutedEvent="Button.Click">
                                                    <BeginStoryboard Storyboard="{StaticResource CollapseUpdateTime}"/>
                                                </EventTrigger>
                                            </Button.Triggers>
                                        </Button>
                                        <Button Content="Update" Style="{DynamicResource BlueTextBtn}" Margin="10,0" Command="{Binding UpdateTestEndTime}">
                                            <Button.Triggers>
                                                <EventTrigger RoutedEvent="Button.Click">
                                                    <BeginStoryboard Storyboard="{StaticResource CollapseUpdateTime}"/>
                                                </EventTrigger>
                                            </Button.Triggers>
                                        </Button>
                                    </DockPanel>
                                    
                                </StackPanel>
                            </StackPanel>

                            <!--Login Keys-->
                            <Grid Margin="0,10,0,0">
                                <TextBlock Text="Login Keys"/>
                                <Button Content="Print" Style="{DynamicResource BlueTextBtn}" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                                <ListBox Margin="0,25,0,0" MaxHeight="300"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto" 
                                     Background="Transparent" BorderBrush="{x:Null}" 
                                     ItemsSource="{Binding SelectedClass.Students}">
                                    <ListBox.Resources>
                                        <DataTemplate DataType="{x:Type local:Student}">
                                            <Grid Height="40" Background="Transparent">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="40"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Ellipse Height="{DynamicResource SmallProfilePic}" Width="{DynamicResource SmallProfilePic}" Fill="{DynamicResource BrightBlue}"/>
                                                <TextBlock Text="{Binding Initials}" VerticalAlignment="Center" Foreground="White" HorizontalAlignment="Center"/>
                                                <StackPanel  Grid.Column="1" Margin="10,0,0,0" VerticalAlignment="Center">
                                                    <TextBlock Text="{Binding StudentName}" Foreground="{DynamicResource DarkGray}"/>
                                                    <TextBlock Text="{Binding LoginKey, StringFormat={}Login Key: {0}}" Foreground="{DynamicResource DarkGray}"/>
                                                </StackPanel>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.Resources>
                                </ListBox>
                            </Grid>

                            <!--Pause, Resume-->
                            <StackPanel Margin="0,10,0,0">
                                <TextBlock Text="Test Status"/>
                                <DockPanel Margin="{StaticResource SmallIndent}" HorizontalAlignment="Left">
                                    <RadioButton Content="Resume" Style="{DynamicResource OnSwitch}" Width="100" Height="30"
                                                 IsChecked="{Binding SelectedClass.SelectedTest.TestStatus, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static local:Test_Status.Started}, Mode=TwoWay}"/>
                                    <RadioButton Style="{DynamicResource OffSwitch}" Content="Pause" Width="100" 
                                                 IsChecked="{Binding SelectedClass.SelectedTest.TestStatus, Converter={StaticResource EnumConverter}, ConverterParameter={x:Static local:Test_Status.Paused}, Mode=TwoWay}"/>
                                </DockPanel>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>

        <local:ClassroomLayout Grid.Column="1" Visibility="{Binding ElementName=ClassroomGrid, Path=Visibility}"/>
    </Grid>

</UserControl>
